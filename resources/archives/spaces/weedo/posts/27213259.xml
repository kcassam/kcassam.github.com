<item>
	<title>php, forcer l'écriture dans un fichier</title>
	<link>http://posterous.weedo.fr/php-forcer-lecriture-dans-un-fichier</link>
	<pubDate>Fri Sep 03 03:36:00 -0700 2010</pubDate>
	
	<dc:creator><![CDATA[Karim Cassam Chenaï]]></dc:creator>
	
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://posterous.weedo.fr/php-forcer-lecriture-dans-un-fichier</guid>
	<description></description>
	<content:encoded><![CDATA[<h1>Forcer l'écriture dans un fichier</h1>

<p>Sans révolutionner l'histoire de l'informatique, voici la fonction putByForce pour écrire dans un fichier. Le petit plus de cette fonction est que si on a pas les droits en écriture sur le fichier, on réessaye en effaçant d'abord le fichier. Donc si on a pas les droits en écriture sur le fichier mais qu'on a les droits sur le dossier, on va quand même réussir à écrire dans le fichier, contrairement à un simple fwrite.</p>

<div class="CodeRay">
  <div class="code"><pre><span class="keyword">class</span> <span class="class">WDFile</span> {

 <span class="comment">/**
  * putByForce function.
  * 
  * Cette fonction fait une chose : elle essaye de mettre $content dans le fichier $filename, même si on a pas les droits en écriture sur le fichier, donc éventuellement en effaçant le fichier.
  * On suppose que le dossier du fichier existe mais on pourrait compléter cette fonction avec la création du dossier dans le cas ou il n'existe pas.
  * @access public
  * @static
  * @param mixed $filename
  * @param mixed $content
  * @return void
  */</span>
 <span class="keyword">static</span> <span class="keyword">function</span> <span class="function">putByForce</span> (<span class="local-variable">$filename</span>, <span class="local-variable">$content</span>) {
 <span class="comment">// D'abord, on essaye la manière douce</span>
   <span class="local-variable">$wrote</span> = <span class="predefined-constant">self</span>::put(<span class="local-variable">$filename</span>, <span class="local-variable">$content</span>);
   <span class="keyword">if</span> (<span class="local-variable">$wrote</span> == <span class="predefined-constant">false</span>) {
     <span class="comment">// L'écriture a échouée, j'essaye la manière forte : je supprime le fichier avant d'essayer de l'écrire.</span>
     <span class="keyword">if</span> (<span class="predefined">is_file</span>(<span class="local-variable">$filename</span>)) {
       <span class="predefined">unlink</span>(<span class="local-variable">$filename</span>);
       <span class="local-variable">$wrote</span> = <span class="predefined-constant">self</span>::put(<span class="local-variable">$filename</span>, <span class="local-variable">$content</span>);
     }
   }
 <span class="keyword">return</span> (<span class="local-variable">$wrote</span>);
 }

 <span class="comment">/**
  * put function.
  * 
  * @access private
  * @static
  * @param mixed $filename
  * @param mixed $content
  * @return TRUE en cas de succès ou FALSE si une erreur survient.
  */</span>
 <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">function</span> <span class="function">put</span> (<span class="local-variable">$filename</span>, <span class="local-variable">$content</span>) {
   <span class="local-variable">$filew</span> = <span class="exception">@</span><span class="predefined">fopen</span>(<span class="local-variable">$filename</span>,<span class="string"><span class="delimiter">&quot;</span><span class="content">w</span><span class="delimiter">&quot;</span></span>);
   <span class="keyword">if</span> (<span class="local-variable">$filew</span> === <span class="predefined-constant">false</span>) {
     <span class="keyword">return</span> (<span class="predefined-constant">false</span>);
   } <span class="keyword">else</span> {
     <span class="local-variable">$wrote</span> = <span class="predefined">fwrite</span>(<span class="local-variable">$filew</span>, <span class="local-variable">$content</span>);
     <span class="keyword">if</span> (<span class="local-variable">$wrote</span> === <span class="predefined-constant">false</span>) {
       <span class="keyword">return</span> (<span class="predefined-constant">false</span>);
     } <span class="keyword">else</span> {
       <span class="predefined">fclose</span>(<span class="local-variable">$filew</span>);
       <span class="keyword">return</span> <span class="predefined-constant">true</span> ;
     }
   }
 }
}</pre></div>
</div>]]></content:encoded>
	<excerpt:encoded><![CDATA[Forcer l'écriture dans un fichier Sans révolutionner l'histoire de l'informatique, voici la fonction putByForce pour écrire dans un fichier. Le petit plus de cette fonction est que si on a pas les droits en écriture sur le fichier, on réessay...]]></excerpt:encoded>	

	<wp:post_date>Fri Sep 03 03:36:00 -0700 2010</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name>php-forcer-lecriture-dans-un-fichier</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
