<item>
	<title>Debugger symfony </title>
	<link>http://posterous.weedo.fr/debugger-symfony</link>
	<pubDate>Thu Nov 26 13:45:58 -0800 2009</pubDate>
	
	<dc:creator><![CDATA[Karim Cassam ChenaÃ¯]]></dc:creator>
	
	
		<category domain="tag" nicename="symfony123"><![CDATA[symfony123]]></category>
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://posterous.weedo.fr/debugger-symfony</guid>
	<description></description>
	<content:encoded><![CDATA[A partir de maintenant, ne plus debbuger du code avec des echos et des var_dump svp. Utiliser les outils Symfony. <p /> A lire : <a href="http://www.symfony-project.org/book/1_2/16-Application-Management-Tools">http://www.symfony-project.org/book/1_2/16-Application-Management-Tools</a> <p /> Notamment : <br />Adding a Log Message <br />You can manually add a message in the symfony log file from your code by using one of the techniques described in Listing 16-5. <p /> Listing 16-5 - Adding a Custom Log Message <p /> // From an action <br />$this->logMessage($message, $level) <br />; <p /> // From a template <p />  <p />  <br />Et pour logger une array ou un objet, utiliser ob : <br />Exemple : <p /> 	$array = ($this->getRequest()->getParameter("contact")); <br />	//Oh, mais comment logger un tableau ??? <br />	ob_start(); <br />	var_dump($array); <br />	$result = ob_get_clean(); <br /> 	$this->logMessage($result);]]></content:encoded>
	<excerpt:encoded><![CDATA[A partir de maintenant, ne plus debbuger du code avec des echos et des var_dump svp. Utiliser les outils Symfony. A lire : http://www.symfony-project.org/book/1_2/16-Application-Management-Tools Notamment : Adding a Log Message You can manually ad...]]></excerpt:encoded>	

	<wp:post_date>Thu Nov 26 13:45:58 -0800 2009</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name>debugger-symfony</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
