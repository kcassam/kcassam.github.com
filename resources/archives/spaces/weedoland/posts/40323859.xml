<item>
	<title>intégration framework (Symfony/Zend) avec un cms (wordpress)</title>
	<link>http://weedoland.posterous.com/integration-framework-symfonyzend-avec-un-cms</link>
	<pubDate>Wed Jan 19 06:55:00 -0800 2011</pubDate>
	
	<dc:creator><![CDATA[Karim Cassam Chenaï]]></dc:creator>
	
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://weedoland.posterous.com/integration-framework-symfonyzend-avec-un-cms</guid>
	<description></description>
	<content:encoded><![CDATA[<ol>
<li>Intégrer Symfony &amp; Wordpress :
<a href="http://blog.codeclarity.com/2009/12/02/integrating-symfony-and-wordpress/">http://blog.codeclarity.com/2009/12/02/integrating-symfony-and-wordpress/</a></li>
</ol>


<p>Le coeur du dispositif est celui-ci</p>

<div class="CodeRay">
  <div class="code"><pre>public function executeIndex(sfWebRequest $request) {
ob_start();
wp();
/* [...] */
$this-&gt;blog = ob_get_clean();</pre></div>
</div>


<p>   }</p>

<p>Ce dispositif a été mis en place sur CD. A dispo pour vous expliquer si besoin.</p>

<p>=> On peut adapter pour Zend</p>

<ol>
<li>Une autre solution est la suivante :</li>
</ol>


<p>Une page est découpée en sections.
une section est alimentée en allant chercher toutes les xx heures via
Curl un bout de html sur un site tiers et génère un cache en cas de
succès. Il est aussi possible de de faire un appel sans attendre le retour. C'est
le cache qui est ensuite lu.
Ce fonctionnement a été mis en place sur lux, sur la home, pour la
partie Shopping lux. Voir les classes : wdflxm et WDCurl</p>

<ol>
<li>Layout : Bien lire ce post :
<a href="http://posterous.weedo.fr/bien-demarrer-un-site-web-en-html-en-ne-parta">http://posterous.weedo.fr/bien-demarrer-un-site-web-en-html-en-ne-parta</a>
et utiliser <a href="http://www.yaml.de/en/home.html">http://www.yaml.de/en/home.html</a> pour le layout</li>
</ol>]]></content:encoded>
	<excerpt:encoded><![CDATA[Intégrer Symfony & Wordpress : http://blog.codeclarity.com/2009/12/02/integrating-symfony-and-wordpress/ Le coeur du dispositif est celui-ci public function executeIndex(sfWebRequest $request) { ob_start(); wp(); /* [...] */ $this->blog = ob_get_c...]]></excerpt:encoded>	

	<wp:post_date>Wed Jan 19 06:55:00 -0800 2011</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name>integration-framework-symfonyzend-avec-un-cms</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
